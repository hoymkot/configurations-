Web UI default port 943
Web UI username openvpn:openvpn
OpenVPN Daemon port 443

You can now continue configuring OpenVPN Access Server by
directing your Web browser to this URL:

https://18.141.8.44:943/admin
Login as "openvpn" with the same password used to authenticate
to this UNIX host.

During normal operation, OpenVPN AS can be accessed via these URLs:
Admin  UI: https://18.141.8.44:943/admin
Client UI: https://18.141.8.44:943/

See the Release Notes for this release at:
   https://openvpn.net/vpn-server-resources/release-notes/
   
   
   IN THIS TUTORIAL
   https://openvpn.net/aws-video-tutorials/byol/
This tutorial covers the steps to launch OpenVPN Access Server through Amazon Web Services and then use a license purchased with OpenVPN.net. Set up your VPN on an Amazon Machine Image within minutes and provide the security of encrypted traffic through an Amazon EC2 Linux Instance. No hardware or server required on your end.

These are the steps covered:

Start on your Amazon EC2 Dashboard and click on Launch Instance.
From the AWS Marketplace, search for “OpenVPN”.
In the results, you’ll see options for OpenVPN Access Server. Choose the top result for our Bring Your Own License (BYOL) option.
Click on Select for the AMI chosen.
Review the pricing details, then click on Continue.
Choose your instance type (t2.micro for our demo) and click on Next: Configure Instance Details.
Choose your VPC from the Network field.
Choose whether you want to auto-assign Public IP from that field and click on Next: Add Storage.
Click Next: Add Tags.
Click on Add Tag and provide a name label then click on Next: Configure Security Group.
Review the security group auto-generated by AWS with the necessary ports open for the VPN, then click on Review and Launch.
Review your instance launch details, and click on Launch.
Select an existing key pair or create a new key pair, then click on Launch Instances.
Click on the page for your instance while it launches. You can copy the IP Address from the IPv4 Public IP field under your Description.
SSH into your new instance with the Public IP address (we used a terminal in our demo) and logging in with the openvpnas user.
Upon first login, the OpenVPN Access Server configuration launches automatically and you can read and agree to the EULA.
Go through the configuration (we selected all of the defaults).
At the end of the setup, make note of the URLs for the Admin UI and Client UI.
Sudo up by entering sudo -i
Now with root privileges, set a password for the openvpn bootstrap user by entering passwd openvpn
Set the password, hit enter, and retype it to confirm, then hit enter.
Now with the password set, go to your browser and enter the URL for the Admin UI (from the step above). 
You will see a security warning in your browser because OpenVPN Access Server ships with a self-signed certificate (something you can replace with your own web cert to remove it).
Login to the Admin Web UI with your openvpn username and password just assigned.
Read and agree to the EULA.
You’ll see the Status Overview showing you have 2 devices under License Status as Access Server comes with 2 free concurrent connections so you can start testing right away.
Click on Configuration > VPN Settings and review the Network and Routing settings where you could provide access control for a use case for SSH access:
From the OpenVPN.net website, click on Purchase License, login or create an account, choose your details, and checkout.
Once you’ve purchased your license, you’ll receive a license key number, which you’ll enter in your Admin Web UI under Configuration > License.
Enter your license key in the Add A New License Key field and click on Add A New License Key.
You’re up and running with your OpenVPN Access Server AMI and purchased license that includes help and support from our customer service team at any time.
